.btn {    
    transform:translate(0, 0);
     
    &:link,
    &:visited {
        text-transform: uppercase;
        font-size: 1.6rem;
        text-decoration: none;
        padding: 1.5rem 4rem;
        // display inline-block to implement padding
        display: inline-block; 
        border-radius: 8rem;
        /* all properties are enabled to be translated to .2 seconds */
        transition: all .2s;
        /* position relative to ::after */
        position: relative;

        &:hover {
            // we want the button to move up when we hover
            transform: translateY(-.3rem);
            box-shadow: 0 2rem  rgba($color-black, .2);

        }
        // when we click the button, we want the button to move down
        // we use the active state
        &:active {
            transform: translateY(-.1rem);
            box-shadow: 0 .5rem  rgba($color-black, .2);
        }      

    }
    &--color{
        background-color: red;
        color: $color-white;
        
    }
    // after pseudo adds a vitual element to the element which enables us to style it*/
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 8rem;
        position: absolute;
        top:0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    // ::after pseduo-element with button white
    &--color::after {
        background-color: red;
    }
    // after pseudo element when button is hovered
    &:hover::after {
        /* transform scale increases the element */
        transform: scaleX(1.4) scaleY(1.6);
        /* to make the element fade out */
        opacity: 0;
    }

    &--animated {
        animation: moveInBottom .5s ease-out;
        /* animation fill mode. it applies the style of 0% before animation starts */
        animation-fill-mode: backwards;
    }

}

// view button
.btn-text {
    &:link,
    &:visited {
        font-size: 1.6rem;
        color:$color-gray-dark-3;
        display:inline-block;
        text-decoration: none;
        border-bottom: 1px solid red;
        padding: 3px;
        transition: all .2s;
        

    }

    // when we hover
    &:hover {
        background-color: red;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black,0.2);
        transform: translateY(-.2rem);
        border-radius: 1rem;
    }
    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
        transform: translateY(0);
    }
}